#cmakedefine HAVE_STDINT_H 1

#cmakedefine HAVE_INTTYPES_H 1

#cmakedefine HAVE_LITTLE_ENDIAN 1

/* Define if you have the `alarm' function. */
#cmakedefine HAVE_ALARM

/* Define if alloca() works (via gmp-impl.h). */
#cmakedefine HAVE_ALLOCA			1

/* Define if you have <alloca.h> and it should be used (not on Ultrix). */
#cmakedefine HAVE_ALLOCA_H

/* Define if the compiler accepts gcc style __attribute__ ((const)) */
#cmakedefine HAVE_ATTRIBUTE_CONST

/* Define if the compiler accepts gcc style __attribute__ ((malloc)) */
#cmakedefine HAVE_ATTRIBUTE_MALLOC

/* Define if the compiler accepts gcc style __attribute__ ((mode (XX))) */
#cmakedefine HAVE_ATTRIBUTE_MODE

/* Define if the compiler accepts gcc style __attribute__ ((noreturn)) */
#cmakedefine HAVE_ATTRIBUTE_NORETURN

/* Define if tests/libtests has calling conventions checking for the CPU */
#cmakedefine HAVE_CALLING_CONVENTIONS

/* Define if you have the `clock' function. */
#cmakedefine HAVE_CLOCK			1

/* Define if you have the `clock_gettime' function. */
#cmakedefine HAVE_CLOCK_GETTIME

/* Define if you have the `cputime' function. */
#cmakedefine HAVE_CPUTIME

/* Define to 1 if you have the declaration of `fgetc', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_FGETC		1

/* Define to 1 if you have the declaration of `fscanf', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_FSCANF	1

/* Define to 1 if you have the declaration of `optarg', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_OPTARG	0

/* Define to 1 if you have the declaration of `ungetc', and to 0 if you don't.
   */
#cmakedefine HAVE_DECL_UNGETC	1

/* Define to 1 if you have the declaration of `vfprintf', and to 0 if you
   don't. */
#cmakedefine HAVE_DECL_VFPRINTF	1

/* Define if denormalized floats work. */
#cmakedefine HAVE_DENORMS		1

/* Define if you have the <dlfcn.h> header file. */
#cmakedefine HAVE_DLFCN_H

/* Define one (and only one) of the following for the format of a `double'.
   If your format is not among these choices, or you don't know what it is,
   then leave all of them undefined.
   "IEEE_LITTLE_SWAPPED" means little endian, but with the two 4-byte halves
   swapped, as used by ARM CPUs in little endian mode.  */
#cmakedefine HAVE_DOUBLE_IEEE_BIG_ENDIAN
#cmakedefine HAVE_DOUBLE_IEEE_LITTLE_ENDIAN
#cmakedefine HAVE_DOUBLE_IEEE_LITTLE_SWAPPED
#cmakedefine HAVE_DOUBLE_VAX_D
#cmakedefine HAVE_DOUBLE_VAX_G
#cmakedefine HAVE_DOUBLE_CRAY_CFP

/* Define if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H		1

/* Define if you have the <fpu_control.h> header file. */
#cmakedefine HAVE_FPU_CONTROL_H

/* Define if you have the `getpagesize' function. */
#cmakedefine HAVE_GETPAGESIZE

/* Define if you have the `getrusage' function. */
#cmakedefine HAVE_GETRUSAGE

/* Define if you have the `gettimeofday' function. */
#cmakedefine HAVE_GETTIMEOFDAY

/* Define if 0/0, 1/0, -1/0 and sqrt(-1) work to generate NaN/infinities. */
#cmakedefine HAVE_INFS			1

/* Define if the system has the type `intmax_t'. */
#cmakedefine HAVE_INTMAX_T

/* Define one (just one) of the following for the endiannes of `mp_limb_t'.
   If the endianness is not a simple big or little, or you don't know what
   it is, then leave both of these undefined. */
#cmakedefine HAVE_LIMB_BIG_ENDIAN
#cmakedefine HAVE_LIMB_LITTLE_ENDIAN		1

#cmakedefine HAVE_STD__LOCALE 1

/* Define if the compiler supports and should use thread-local storage */
#cmakedefine HAVE_TLS 1

/* Define if the library should be thread-safe, no matter whether HAVE_TLS is used */
#cmakedefine FLINT_REENTRANT 1

/* Define if you have the `localeconv' function. */
#cmakedefine HAVE_LOCALECONV		1

/* Define if you have the <locale.h> header file. */
#cmakedefine HAVE_LOCALE_H		1

/* now required by MPFR */
#cmakedefine HAVE_STRUCT_LCONV_DECIMAL_POINT 1
#cmakedefine HAVE_STRUCT_LCONV_THOUSANDS_SEP 1

/* Define if the system has the type `long double'. */
#cmakedefine HAVE_LONG_DOUBLE	1

/* Define if the system has the type `long long'. */
#cmakedefine HAVE_LONG_LONG		1

/* Define if you have the `lrand48' function. */
#cmakedefine HAVE_LRAND48

/* Define if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H		1

/* Define if you have the `memset' function. */
#cmakedefine HAVE_MEMSET			1

/* Define if you have the `mmap' function. */
#cmakedefine HAVE_MMAP

/* Define if you have the `mprotect' function. */
#cmakedefine HAVE_MPROTECT

/* Define if you have the `obstack_vprintf' function. */
#cmakedefine HAVE_OBSTACK_VPRINTF

/* Define if you have the `popen' function. */
#cmakedefine HAVE_POPEN

/* Define if you have the `processor_info' function. */
#cmakedefine HAVE_PROCESSOR_INFO

/* Define if the system has the type `ptrdiff_t'. */
#cmakedefine HAVE_PTRDIFF_T		1

/* Define if the system has the type `quad_t'. */
#cmakedefine HAVE_QUAD_T

#cmakedefine HAVE_RAISE			1

/* Define if you have the `read_real_time' function. */
#cmakedefine HAVE_READ_REAL_TIME

#cmakedefine HAVE_SIGNAL         1
#cmakedefine HAVE_SIGNAL_H       1

/* Define if you have the `sigaction' function. */
#cmakedefine HAVE_SIGACTION

/* Define if you have the `sigaltstack' function. */
#cmakedefine HAVE_SIGALTSTACK

/* Define if you have the `sigstack' function. */
#cmakedefine HAVE_SIGSTACK

/* Tune directory speed_cyclecounter, undef=none, 1=32bits, 2=64bits) */
#cmakedefine HAVE_SPEED_CYCLECOUNTER	2

/* Define if the system has the type `stack_t'. */
#cmakedefine HAVE_STACK_T

/* Define if <stdarg.h> exists and works */
#cmakedefine HAVE_STDARG			1

/* Define if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H		1

/* Define if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP

/* Define if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR			1

/* Define if cpp supports the ANSI # stringizing operator. */
#cmakedefine HAVE_STRINGIZE		1

/* Define if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H

/* Define if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H		1

/* Define if you have the `strnlen' function. */
#cmakedefine HAVE_STRNLEN        1

/* Define if you have the `strtoul' function. */
#cmakedefine HAVE_STRTOUL		1

/* Define if you have the `sysconf' function. */
#cmakedefine HAVE_SYSCONF

/* Define if you have the `sysctl' function. */
#cmakedefine HAVE_SYSCTL

/* Define if you have the `sysctlbyname' function. */
#cmakedefine HAVE_SYSCTLBYNAME

/* Define if you have the `syssgi' function. */
#cmakedefine HAVE_SYSSGI

/* Define if you have the <sys/mman.h> header file. */
#cmakedefine HAVE_SYS_MMAN_H

/* Define if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H

/* Define if you have the <sys/processor.h> header file. */
#cmakedefine HAVE_SYS_PROCESSOR_H

/* Define if you have the <sys/resource.h> header file. */
#cmakedefine HAVE_SYS_RESOURCE_H

/* Define if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H		1

/* Define if you have the <sys/sysctl.h> header file. */
#cmakedefine HAVE_SYS_SYSCTL_H

/* Define if you have the <sys/syssgi.h> header file. */
#cmakedefine HAVE_SYS_SYSSGI_H

/* Define if you have the <sys/systemcfg.h> header file. */
#cmakedefine HAVE_SYS_SYSTEMCFG_H

/* Define if you have the <sys/times.h> header file. */
#cmakedefine HAVE_SYS_TIMES_H

/* Define if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H

/* Define if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H	1

/* Define if you have the `times' function. */
#cmakedefine HAVE_TIMES

/* Define if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* Define if you have vsnprintf and it works properly. */
#cmakedefine HAVE_VSNPRINTF

/* Assembler local label prefix */
#cmakedefine LSYM_PREFIX

/* Define if you have the `fesetround' function via the <fenv.h> header file.
   */
#cmakedefine MPFR_HAVE_FESETROUND

#cmakedefine HAVE_SSTREAM 1

/* Define if compiler has function prototypes */
#cmakedefine PROTOTYPES			1

/* Define as the return type of signal handlers (`int' or `void'). */
#cmakedefine RETSIGTYPE	void

/* The size of a `unsigned long', as computed by sizeof. */
#cmakedefine SIZEOF_UNSIGNED_LONG	4

/* Define if sscanf requires writable inputs */
#cmakedefine SSCANF_WRITABLE_INPUT

/* Define if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS		1

/* ./configure --enable-assert option, to enable some ASSERT()s */
#cmakedefine WANT_ASSERT

/* Define if you cpu_set_t in sched.h */
#cmakedefine01 HAVE_CPU_SET_T

/* Define if your processor stores words with the most significant byte first
   (like Motorola and SPARC, unlike Intel and VAX). */
#cmakedefine WORDS_BIGENDIAN

#cmakedefine HAVE_PTHREAD 1

/* Define as `__inline' if that's what the C compiler calls it, or to nothing
   if it is not supported. */
#ifndef __cplusplus
#define inline	__inline
#endif

#ifdef HAVE_STDINT_H
#define HAVE_INTMAX_T        1
#define HAVE_UINTMAX_T       1
#define HAVE_PTRDIFF_T       1
#define HAVE_UINT_LEAST32_T  1
#define SIZEOF_UINTMAX_T	 8
#endif

#define NPRINTF_J            1
#define NPRINTF_T            1

#ifdef _MSC_VER
#define access _access
#define strcasecmp _stricmp
#define strncasecmp	_strnicmp
#define alloca _alloca
#define HAVE_STRCASECMP		1
#define HAVE_STRNCASECMP	1
#define MSC_C_(x) #x  
#define MSC_CC_(x)  MSC_C_(x)
#define MSC_VERSION "Microsoft C++ (Version " MSC_CC_(_MSC_FULL_VER) ")"
#endif

#if defined (FLINT_BUILD_DLL)
#define FLINT_DLL __declspec(dllexport)
#elif defined(MSC_USE_DLL)
#define FLINT_DLL __declspec(dllimport)
#else
#define FLINT_DLL
#endif
